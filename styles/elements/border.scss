@import "../helpers/color-scheme-and-device.scss";

$borderStyles: dotted, dashed, solid, double, groove, ridge, inset, outset, none, hidden;
$borderSides: top, right, bottom, left;
$borderRadiusSides: top-left, top-right, bottom-left, bottom-right;
$selectors: "border", "b";

@include colorSchemeAndDevice($selectors) {
  &-no,
  &-0 {
    border: unset;
  }

  @each $colorKey, $colorValue in $colors {
    @for $borderSize from $ui_borderBottomLimit through $ui_borderTopLimit {
      @each $borderStyle in $borderStyles {
        &-#{$borderStyle}-#{$colorKey}-#{$borderSize} {
          border: calc(#{$borderSize} * 1px) $borderStyle $colorValue;
        }
      }
    }
  }

  @each $borderSide in $borderSides {
    @each $colorKey, $colorValue in $colors {
      @for $borderSize from $ui_borderBottomLimit through $ui_borderTopLimit {
        @each $borderStyle in $borderStyles {
          &-#{$borderSide}-#{$borderStyle}-#{$colorKey}-#{$borderSize} {
            border-#{$borderSide}: calc(#{$borderSize} * 1px) $borderStyle $colorValue;
          }
        }
      }
    }

    &-#{$borderSide}-no,
    &-#{$borderSide}-0 {
      border-#{$borderSide}: unset;
    }
  }

  &-radius,
  &-r {
    border-radius: $ui_borderRadius;

    @for $borderSize from $ui_borderRadiusBottomLimit through $ui_borderRadiusTopLimit {
      &-#{$borderSize} {
        border-radius: calc(#{$borderSize} * 1px);
      }
    }

    @each $borderRadiusSide in $borderRadiusSides {
      @for $borderSize from $ui_borderRadiusBottomLimit through $ui_borderRadiusTopLimit {
        &-#{$borderRadiusSide}-#{$borderSize} {
          border-#{$borderRadiusSide}-radius: calc(#{$borderSize} * 1px);
        }
      }

      &-#{$borderRadiusSide}-no,
      &-#{$borderRadiusSide}-0 {
        border-#{$borderRadiusSide}-radius: unset;
      }
    }
  }
}
