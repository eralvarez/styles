@use "sass:color";
@use "sass:math";
@import "../helpers/color-scheme-and-device.scss";

$selectors: "background", "bg";

@include colorSchemeAndDevice($selectors) {
  @each $colorKey, $colorValue in $colors {
    &-#{$colorKey} {
      background-color: $colorValue;

      @for $colorPercentageLevel
        from $ui_colorBackgroundPercentageLevelBottomLimit
        through $ui_colorBackgroundPercentageLevelTopLimit
      {
        @if $colorPercentageLevel < 0 {
          &-darker,
          &-d {
            &#{$colorPercentageLevel} {
              $percentageLevel: math.percentage(math.div($colorPercentageLevel, 100));
              background-color: color.scale($colorValue, $lightness: $percentageLevel);
            }
          }
        } @else {
          &-lighter,
          &-l {
            &-#{$colorPercentageLevel} {
              $percentageLevel: math.percentage(math.div($colorPercentageLevel, 100));
              background-color: color.scale($colorValue, $lightness: $percentageLevel);
            }
          }
        }
      }
    }
  }
}

$selectors: "color";
@include colorSchemeAndDevice($selectors) {
  @each $colorKey, $colorValue in $colors {
    &-#{$colorKey} {
      color: $colorValue;

      @for $colorPercentageLevel
        from $ui_colorPercentageLevelBottomLimit
        through $ui_colorPercentageLevelTopLimit
      {
        @if $colorPercentageLevel < 0 {
          &-darker,
          &-d {
            &#{$colorPercentageLevel} {
              $percentageLevel: math.percentage(math.div($colorPercentageLevel, 100));
              color: color.scale($colorValue, $lightness: $percentageLevel);
            }
          }
        } @else {
          &-lighter,
          &-l {
            &-#{$colorPercentageLevel} {
              $percentageLevel: math.percentage(math.div($colorPercentageLevel, 100));
              color: color.scale($colorValue, $lightness: $percentageLevel);
            }
          }
        }
      }
    }
  }
}
